@{
ViewData["Title"] = "Gestión de Afiliados";
}

@section Styles {
<script src="https://cdn.tailwindcss.com"></script>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<style>
    .sidebar { position: fixed; top: 0; left: 0; z-index: 10; width: 16rem; height: 100vh; overflow-y: auto; box-shadow: 2px 0 5px rgba(0,0,0,0.1); }
    body { font-family: 'Inter', sans-serif; background-color: #f3f4f6; }
    .camera-container { border: 2px solid #e5e7eb; background-color: #f9fafb; box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1); }
    main { margin-left: 16rem; } /* Ajuste para el contenido principal */
</style>
}

<div class="flex min-h-screen bg-gray-50">

    <aside class="sidebar bg-gray-800 text-white flex flex-col p-4">
        <div class="text-2xl font-extrabold text-blue-400 mb-8 pt-2 border-b border-gray-700 pb-4">
            <i class="fas fa-heartbeat mr-2"></i> System EPS
        </div>
        <nav class="flex-grow">
            <h3 class="text-xs uppercase font-semibold text-gray-400 mb-3 ml-2">Módulos</h3>
            <a href="@Url.Action("Dashboard", "Home")" class="flex items-center p-3 rounded-lg text-gray-300 hover:bg-gray-700 hover:text-white transition duration-150 mb-2">
                <i class="fas fa-desktop w-6 text-lg text-green-400"></i><span class="ml-3 font-medium">Panel de Control</span>
            </a>
            <a href="@Url.Action("ManageAffiliate", "Home")" class="flex items-center p-3 rounded-lg text-gray-100 bg-gray-700 font-medium mb-2 transition duration-150">
                <i class="fas fa-user-plus w-6 text-lg text-yellow-400"></i><span class="ml-3">Gestión de Afiliados</span>
            </a>
            <h3 class="text-xs uppercase font-semibold text-gray-400 mt-6 mb-3 ml-2">Visualización</h3>
            <a href="@Url.Action("Kiosk", "Home")" target="_blank" class="flex items-center p-3 rounded-lg text-gray-300 hover:bg-gray-700 hover:text-white transition duration-150 mb-2">
                <i class="fas fa-tablet-alt w-6 text-lg text-blue-400"></i><span class="ml-3 font-medium">Kiosko de Turnos</span>
            </a>
            <a href="@Url.Action("TurnDisplay", "Home")" target="_blank" class="flex items-center p-3 rounded-lg text-gray-300 hover:bg-gray-700 hover:text-white transition duration-150 mb-2">
                <i class="fas fa-tv w-6 text-lg text-red-400"></i><span class="ml-3 font-medium">Pantalla de Llamadas</span>
            </a>
        </nav>
        <div class="mt-auto pt-6 border-t border-gray-700 text-center">
            <p class="text-xs text-gray-500">Salud Linux &copy; 2025</p>
        </div>
    </aside>

    <main class="flex-1 p-4 md:p-8">
        <div class="max-w-6xl mx-auto bg-white p-8 rounded-xl shadow-2xl">

            <header class="mb-8 border-b pb-4">
                <h1 id="formHeader" class="text-3xl font-extrabold text-gray-900 flex items-center">
                    <i class="fas fa-user-plus text-indigo-600 mr-3"></i> Gestión de Afiliados
                </h1>
                <p class="text-gray-500 mt-1">Cree, busque, actualice o elimine registros de afiliados.</p>
            </header>

            <div id="messageBox" class="p-3 mb-4 rounded-lg text-sm hidden" role="alert"></div>

            <div class="mb-6">
                <label for="qrInput" class="block text-sm font-medium text-gray-700 mb-1"><i class="fas fa-qrcode mr-2"></i>Escanear Carnet o Ingresar ID</label>
                <input type="text" id="qrInput" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" placeholder="El lector QR o la URL escribirán aquí...">
            </div>

            <form id="affiliateForm" class="space-y-6">
                <input type="hidden" id="affiliateId">
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    <div class="space-y-6">
                        <h4 class="text-xl font-semibold text-gray-700 border-b pb-2 mb-4">1. Datos Personales</h4>
                        <div>
                            <label for="fullName" class="block text-sm font-medium text-gray-700 mb-1">Nombre Completo <span class="text-red-500">*</span></label>
                            <input type="text" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" id="fullName" required>
                        </div>
                        <div>
                            <label for="documentId" class="block text-sm font-medium text-gray-700 mb-1">Documento <span class="text-red-500">*</span></label>
                            <input type="text" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" id="documentId" required>
                        </div>
                        <div>
                            <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Correo Electrónico</label>
                            <input type="email" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" id="email">
                        </div>
                        <div>
                            <label for="phoneNumber" class="block text-sm font-medium text-gray-700 mb-1">Teléfono</label>
                            <input type="text" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" id="phoneNumber">
                        </div>
                    </div>

                    <div class="space-y-6">
                        <h4 class="text-xl font-semibold text-gray-700 border-b pb-2 mb-4">2. Captura de Foto Facial</h4>
                        <div class="camera-container rounded-lg p-4 text-center">
                            <video id="video" width="320" height="240" autoplay class="w-full max-w-[320px] mx-auto rounded-md shadow-md mb-4"></video>
                            <button type="button" id="captureButton" class="bg-indigo-500 hover:bg-indigo-600 text-white font-semibold py-2 px-4 rounded-full transition duration-200 shadow-md flex items-center justify-center mx-auto">
                                <i class="fas fa-camera mr-2"></i> Capturar Foto
                            </button>
                            <h5 class="text-lg font-medium text-gray-700 mt-4 mb-2">Vista Previa:</h5>
                            <img id="preview" width="320" height="240" class="w-full max-w-[320px] mx-auto rounded-md border border-gray-300 bg-gray-100" />
                        </div>
                    </div>
                </div>
                <hr class="border-gray-300 mt-8">
                <div class="pt-4 flex flex-wrap gap-4 justify-end">
                    <button type="button" id="btnCrear" class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg"><i class="fas fa-plus-circle mr-2"></i> Crear Nuevo</button>
                    <button type="button" id="btnActualizar" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg" style="display: none;"><i class="fas fa-save mr-2"></i> Actualizar</button>
                    <button type="button" id="btnEliminar" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg" style="display: none;"><i class="fas fa-trash-alt mr-2"></i> Eliminar</button>
                    <button type="button" id="btnLimpiar" class="bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-4 rounded-lg"><i class="fas fa-broom mr-2"></i> Limpiar</button>
                </div>
            </form>
        </div>
    </main>
</div>

<canvas id="canvas" width="320" height="240" class="hidden"></canvas>

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', () => {
        // --- Referencias a Elementos ---
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const captureButton = document.getElementById('captureButton');
        const preview = document.getElementById('preview');
        const form = document.getElementById('affiliateForm');
        const qrInput = document.getElementById('qrInput');

        const affiliateIdInput = document.getElementById('affiliateId');
        const fullNameInput = document.getElementById('fullName');
        const documentIdInput = document.getElementById('documentId');
        const emailInput = document.getElementById('email');
        const phoneNumberInput = document.getElementById('phoneNumber');

        const btnCrear = document.getElementById('btnCrear');
        const btnActualizar = document.getElementById('btnActualizar');
        const btnEliminar = document.getElementById('btnEliminar');
        const btnLimpiar = document.getElementById('btnLimpiar');
        const messageBox = document.getElementById('messageBox');

        let photoBase64 = null;
        let videoStream = null;

        // --- FUNCIONES DE UTILIDAD ---
        function showMessage(message, type = 'success') {
            messageBox.textContent = message;
            messageBox.className = 'p-3 mb-4 rounded-lg text-sm'; // Reset
            if (type === 'success') messageBox.classList.add('bg-green-100', 'text-green-800');
            else if (type === 'error') messageBox.classList.add('bg-red-100', 'text-red-800');
            else messageBox.classList.add('bg-yellow-100', 'text-yellow-800');
        }

        function stopCamera() {
            if (videoStream) {
                videoStream.getTracks().forEach(track => track.stop());
            }
        }

        function limpiarFormulario() {
            form.reset();
            preview.src = '';
            photoBase64 = null;
            affiliateIdInput.value = '';
            qrInput.value = '';

            btnCrear.style.display = 'inline-block';
            btnActualizar.style.display = 'none';
            btnEliminar.style.display = 'none';
            messageBox.classList.add('hidden');
            document.getElementById('formHeader').innerHTML = '<i class="fas fa-user-plus text-indigo-600 mr-3"></i> Gestión de Afiliados';
        }

        // --- INICIALIZACIÓN ---
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => { videoStream = stream; video.srcObject = stream; })
            .catch(err => showMessage("No se pudo acceder a la cámara. Verifique los permisos.", 'error'));

        // --- EVENT LISTENERS ---
        captureButton.addEventListener('click', () => {
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            const dataUrl = canvas.toDataURL('image/png');
            preview.src = dataUrl;
            photoBase64 = dataUrl;
            showMessage("Foto capturada.", 'info');
        });

        qrInput.addEventListener('change', async () => {
            const id = qrInput.value;
            if (id) await cargarAfiliado(id);
        });

        btnCrear.addEventListener('click', guardarAfiliado);
        btnActualizar.addEventListener('click', actualizarAfiliado);
        btnEliminar.addEventListener('click', eliminarAfiliado);
        btnLimpiar.addEventListener('click', limpiarFormulario);

        window.addEventListener('beforeunload', stopCamera);

        // --- FUNCIONES CRUD ---
        async function cargarAfiliado(id) {
            try {
                const response = await fetch(`/api/Affiliates/${id}`);
                if (!response.ok) throw new Error('Afiliado no encontrado');

                const affiliate = await response.json();

                affiliateIdInput.value = affiliate.id;
                fullNameInput.value = affiliate.fullName;
                documentIdInput.value = affiliate.documentId;
                emailInput.value = affiliate.email;
                phoneNumberInput.value = affiliate.phoneNumber;
                preview.src = affiliate.photoBase64;
                photoBase64 = affiliate.photoBase64;

                btnCrear.style.display = 'none';
                btnActualizar.style.display = 'inline-block';
                btnEliminar.style.display = 'inline-block';
                document.getElementById('formHeader').innerHTML = '<i class="fas fa-edit text-blue-600 mr-3"></i> Editando Afiliado';
                showMessage(`Cargado afiliado: ${affiliate.fullName}`, 'success');

            } catch (error) {
                showMessage(error.message, 'error');
                limpiarFormulario();
            }
        }

        async function guardarAfiliado() {
            if (!fullNameInput.value || !documentIdInput.value) { showMessage("Nombre y Documento son requeridos.", 'warning'); return; }
            if (!photoBase64) { showMessage("Por favor, capture una foto.", 'warning'); return; }

            const affiliateData = {
                fullName: fullNameInput.value,
                documentId: documentIdInput.value,
                email: emailInput.value,
                phoneNumber: phoneNumberInput.value,
                photoBase64: photoBase64
            };

            const response = await fetch('/api/Affiliates', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(affiliateData)
            });

            if(response.ok) {
                const nuevoAfiliado = await response.json();
                showMessage(`Afiliado ${nuevoAfiliado.fullName} creado con ID: ${nuevoAfiliado.id}`, 'success');
                window.open(`/Print/Carnet/${nuevoAfiliado.id}`, '_blank', 'width=400,height=650');
                limpiarFormulario();
            } else {
                showMessage("Error al crear el afiliado.", 'error');
            }
        }

        async function actualizarAfiliado() {
            const id = affiliateIdInput.value;
            if (!id) return;

            const affiliateData = {
                id: parseInt(id),
                fullName: fullNameInput.value,
                documentId: documentIdInput.value,
                email: emailInput.value,
                phoneNumber: phoneNumberInput.value,
                photoBase64: photoBase64
            };

            const response = await fetch(`/api/Affiliates/${id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(affiliateData)
            });

            if(response.ok) {
                showMessage("Afiliado actualizado con éxito.", 'success');
            } else {
                showMessage("Error al actualizar el afiliado.", 'error');
            }
        }

        async function eliminarAfiliado() {
            const id = affiliateIdInput.value;
            if (!id || !confirm("¿Está seguro de que desea eliminar a este afiliado?")) return;

            const response = await fetch(`/api/Affiliates/${id}`, { method: 'DELETE' });

            if(response.ok) {
                showMessage("Afiliado eliminado con éxito.", 'success');
                limpiarFormulario();
            } else {
                showMessage("Error al eliminar el afiliado.", 'error');
            }
        }

        const initialId = @Html.Raw(Json.Serialize(ViewBag.AffiliateId));
        if (initialId) {
            qrInput.value = initialId;
            cargarAfiliado(initialId);
        }
    });
</script>
}