@* Asumo que esta vista se llama desde un nuevo controlador o ruta, por ejemplo, /Affiliates/Register *@

@{
    ViewData["Title"] = "Registro de Nuevo Afiliado";
    // Si usas un _Layout.cshtml compartido, la barra lateral debe estar en el layout,
    // o tienes que asegurar que esta vista la renderice directamente.
    // Asumo que esta vista se renderiza dentro de la estructura principal del Layout que contiene los Styles y Scripts sections.
}

@section Styles {
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

    <style>
        /* Estilos del Sidebar */
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            z-index: 10;
            width: 16rem; 
            height: 100vh;
            overflow-y: auto;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        }
        body { font-family: 'Inter', sans-serif; background-color: #f3f4f6; }
        .camera-container {
            border: 2px solid #e5e7eb;
            background-color: #f9fafb;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
    </style>
}

<div class="flex min-h-screen bg-gray-50">

    <aside class="sidebar bg-gray-800 text-white p-4">
        <div class="text-2xl font-extrabold text-blue-400 mb-8 pt-2 border-b border-gray-700 pb-4">
            <i class="fas fa-heartbeat mr-2"></i> System EPS
        </div>

        <nav>
            <h3 class="text-xs uppercase font-semibold text-gray-400 mb-3 ml-2">Módulos de Acceso Rápido</h3>
            
            <a href="@Url.Action("Kiosk", "Home")" target="_blank" class="flex items-center p-3 rounded-lg text-gray-300 hover:bg-gray-700 hover:text-white transition duration-150 mb-2">
                <i class="fas fa-tablet-alt w-6 text-lg text-blue-400"></i>
                <span class="ml-3 font-medium">Kiosko de Turnos</span>
            </a>

            <a href="@Url.Action("Dashboard", "Home")" class="flex items-center p-3 rounded-lg text-gray-300 hover:bg-gray-700 hover:text-white transition duration-150 mb-2">
                <i class="fas fa-desktop w-6 text-lg text-green-400"></i>
                <span class="ml-3 font-medium">Panel de Control</span>
            </a>

            <a href="@Url.Action("TurnDisplay", "Home")" target="_blank" class="flex items-center p-3 rounded-lg text-gray-300 hover:bg-gray-700 hover:text-white transition duration-150 mb-2">
                <i class="fas fa-tv w-6 text-lg text-red-400"></i>
                <span class="ml-3 font-medium">Pantalla de Llamadas</span>
            </a>
            
            
            <a href="@Url.Action("RegisterAffiliate", "Home")" class="flex items-center p-3 rounded-lg text-gray-100 bg-gray-700 font-medium mb-2 transition duration-150">
                <i class="fas fa-user-plus w-6 text-lg text-yellow-400"></i>
                <span class="ml-3">Registrar Afiliado</span>
            </a>
            
        </nav>
        
        <div class="mt-auto pt-6 border-t border-gray-700 text-center">
            <p class="text-xs text-gray-500">Salud Linux &copy; 2025</p>
        </div>
    </aside>

    <main class="flex-1 p-4 md:p-8 ml-64"> <div class="container mx-auto">
            
            <div class="max-w-4xl mx-auto bg-white p-8 rounded-xl shadow-2xl">
                
                <header class="mb-8 border-b pb-4">
                    <h1 class="text-3xl font-extrabold text-gray-900 flex items-center">
                        <i class="fas fa-user-plus text-indigo-600 mr-3"></i>
                        Registro de Nuevo Afiliado
                    </h1>
                    <p class="text-gray-500 mt-1">Capture los datos personales y una fotografía para el expediente.</p>
                </header>

                <div id="messageBox" class="p-3 mb-4 rounded-lg text-sm hidden" role="alert"></div>

                <form id="registerForm" class="space-y-6">
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        
                        <div class="space-y-6">
                            <h4 class="text-xl font-semibold text-gray-700 border-b pb-2 mb-4">1. Datos Personales</h4>
                            
                            <div>
                                <label for="fullName" class="block text-sm font-medium text-gray-700 mb-1">Nombre Completo <span class="text-red-500">*</span></label>
                                <input type="text" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" id="fullName" required>
                            </div>
                            <div>
                                <label for="documentId" class="block text-sm font-medium text-gray-700 mb-1">Documento <span class="text-red-500">*</span></label>
                                <input type="text" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" id="documentId" required>
                            </div>
                            <div>
                                <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Correo Electrónico</label>
                                <input type="email" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" id="email">
                            </div>
                            <div>
                                <label for="phoneNumber" class="block text-sm font-medium text-gray-700 mb-1">Teléfono</label>
                                <input type="text" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500" id="phoneNumber">
                            </div>
                        </div>

                        <div class="space-y-6">
                            <h4 class="text-xl font-semibold text-gray-700 border-b pb-2 mb-4">2. Captura de Foto Facial</h4>
                            
                            <div class="camera-container rounded-lg p-4 text-center">
                                <video id="video" width="320" height="240" autoplay class="w-full max-w-[320px] mx-auto rounded-md shadow-md mb-4"></video>
                                
                                <button type="button" id="captureButton" class="bg-indigo-500 hover:bg-indigo-600 text-white font-semibold py-2 px-4 rounded-full transition duration-200 shadow-md flex items-center justify-center mx-auto">
                                    <i class="fas fa-camera mr-2"></i> Capturar Foto
                                </button>
                                
                                <h5 class="text-lg font-medium text-gray-700 mt-4 mb-2">Vista Previa:</h5>
                                <img id="preview" width="320" height="240" class="w-full max-w-[320px] mx-auto rounded-md border border-gray-300 bg-gray-100" alt="Vista Previa de la Captura" />
                            </div>
                        </div>
                    </div>
                    
                    <hr class="border-gray-300">
                    
                    <div class="pt-4">
                        <button type="button" id="btnGuardarAfiliado" class="w-full bg-green-600 hover:bg-green-700 text-white font-extrabold py-3 rounded-xl transition duration-300 shadow-xl text-lg flex items-center justify-center">
                            <i class="fas fa-save mr-3"></i> Guardar Afiliado y Ficha
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <canvas id="canvas" width="320" height="240" class="hidden"></canvas>
        
    </main>
</div>

@section Scripts {
<script>
    // Variable global para mantener la referencia al stream de la cámara
    let videoStream = null;

    // Función para mostrar mensajes de estado
    function showMessage(message, type = 'success') {
        const box = document.getElementById('messageBox');
        box.textContent = message;
        
        box.classList.remove('hidden', 'bg-green-100', 'text-green-800', 'bg-red-100', 'text-red-800', 'bg-yellow-100', 'text-yellow-800');
        
        if (type === 'success') {
            box.classList.add('bg-green-100', 'text-green-800');
        } else if (type === 'error') {
            box.classList.add('bg-red-100', 'text-red-800');
        } else { // warning
            box.classList.add('bg-yellow-100', 'text-yellow-800');
        }
        box.classList.remove('hidden');
    }

    // Función para detener el stream de la cámara
    function stopCamera() {
        if (videoStream) {
            videoStream.getTracks().forEach(track => track.stop());
            videoStream = null;
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const captureButton = document.getElementById('captureButton');
        const preview = document.getElementById('preview');
        const saveButton = document.getElementById('btnGuardarAfiliado');
        const registerForm = document.getElementById('registerForm');
        let photoBase64 = null;

        // --- Iniciar la cámara ---
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => { 
                videoStream = stream; // Guardar referencia
                video.srcObject = stream; 
            })
            .catch(err => {
                console.error("Error al acceder a la cámara: ", err);
                showMessage("No se pudo acceder a la cámara. Verifique los permisos del navegador.", 'error');
            });

        // --- Capturar la foto ---
        captureButton.addEventListener('click', () => {
            const context = canvas.getContext('2d'); 
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            const dataUrl = canvas.toDataURL('image/png');
            preview.src = dataUrl;
            photoBase64 = dataUrl;
            showMessage("¡Foto capturada! Presione Guardar para finalizar.", 'success');
        });

        // --- Lógica para guardar el afiliado ---
        saveButton.addEventListener('click', async () => {
            // Validación básica de campos requeridos
            if (!document.getElementById('fullName').value || !document.getElementById('documentId').value) {
                showMessage("El Nombre Completo y el Documento son requeridos.", 'warning');
                return;
            }
            if (!photoBase64) {
                showMessage("Por favor, capture una foto antes de guardar.", 'warning');
                return;
            }

            saveButton.disabled = true;
            saveButton.innerHTML = '<i class="fas fa-spinner fa-spin mr-3"></i> Guardando...';

            const affiliateData = {
                fullName: document.getElementById('fullName').value,
                documentId: document.getElementById('documentId').value,
                email: document.getElementById('email').value,
                phoneNumber: document.getElementById('phoneNumber').value,
                photoBase64: photoBase64
            };

            try {
                // Endpoint API: Asegúrate de que tu controlador tenga un endpoint POST en /api/Affiliates
                const response = await fetch('/api/Affiliates', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(affiliateData)
                });

                if (!response.ok) {
                    const errorDetails = await response.text();
                    throw new Error(`Error del servidor (${response.status}): ${errorDetails}`);
                }

                const nuevoAfiliado = await response.json();
                showMessage(`¡Afiliado #${nuevoAfiliado.id} guardado con éxito!`, 'success');

                // Limpiar después de guardar
                registerForm.reset();
                preview.src = '';
                photoBase64 = null;
                // No detenemos la cámara, la dejamos lista para el siguiente registro.

            } catch (error) {
                console.error('Error al guardar:', error);
                showMessage('Fallo al guardar el afiliado. Verifique la consola para detalles.', 'error');
            } finally {
                saveButton.disabled = false;
                saveButton.innerHTML = '<i class="fas fa-save mr-3"></i> Guardar Afiliado y Ficha';
            }
        });
        
        // Detener la cámara al cerrar la ventana o navegar (buena práctica)
        window.addEventListener('beforeunload', stopCamera);
    });
</script>
}