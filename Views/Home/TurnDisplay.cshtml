<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Turnero Digital - EPS VOYAGER</title>
    <link rel="stylesheet" href="~/css/TurnDisplay.css" asp-append-version="true" />
    @{ Layout = null; }
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@700&display=swap" rel="stylesheet">
    <link />
</head>
<body class="flex flex-col h-screen">

<!-- HEADER -->
<header class="bg-black bg-opacity-30 p-6 flex justify-between items-center shadow-2xl">
    <h1 class="text-5xl font-bold tracking-wider">🏥 EPS VOYAGER</h1>
    <div id="clock" class="text-5xl font-bold"></div>
</header>

<!-- CONTENIDO PRINCIPAL -->
<main class="flex-grow flex items-center justify-center p-8">

    <!-- TARJETA PRINCIPAL DEL TURNO -->
    <div id="activeCallCard" class="bg-white text-gray-900 rounded-3xl shadow-2xl p-16 text-center calling-effect">
        <p class="text-4xl font-bold text-gray-600 mb-4">TURNO</p>
        <div id="mainTurnoCode" class="text-[18rem] font-bold leading-none text-purple-700">--</div>

        <div class="mt-12 pt-8 border-t-4 border-gray-300">
            <p class="text-4xl font-bold text-gray-600 mb-4">PUESTO</p>
            <div id="mainDeskNumber" class="text-[12rem] font-bold leading-none text-blue-600">--</div>
        </div>
    </div>

</main>

<!-- FOOTER CON ÚLTIMOS LLAMADOS -->
<footer class="bg-black bg-opacity-40 p-6">
    <h3 class="text-3xl font-bold mb-4 text-center">📋 ÚLTIMOS LLAMADOS</h3>
    <div id="historyList" class="flex justify-center gap-6 flex-wrap">
        <!-- Se llenarán por JavaScript -->
    </div>
</footer>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const clockElement = document.getElementById('clock');
        const activeCallCard = document.getElementById('activeCallCard');
        const mainTurnoCode = document.getElementById('mainTurnoCode');
        const mainDeskNumber = document.getElementById('mainDeskNumber');
        const historyList = document.getElementById('historyList');

        // Reloj
        setInterval(() => {
            const now = new Date();
            clockElement.textContent = now.toLocaleTimeString('es-CO', { hour: '2-digit', minute: '2-digit' });
        }, 1000);

        // SignalR
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/queueHub")
            .withAutomaticReconnect()
            .build();

        // Renderizar historial simplificado
        const renderHistory = (tickets) => {
            if (!tickets || tickets.length === 0) {
                historyList.innerHTML = '<div class="text-white text-xl">No hay historial</div>';
                return;
            }

            historyList.innerHTML = tickets.slice(0, 5).map(t => `
                <div class="bg-white bg-opacity-20 backdrop-blur-sm rounded-xl p-4 text-center fade-in">
                    <div class="text-4xl font-bold">${t.ticketCode}</div>
                    <div class="text-lg">${t.serviceDesk?.deskNumber ?? '--'}</div>
                </div>
            `).join('');
        };

        // Cargar datos iniciales
        async function loadInitialData() {
            try {
                const response = await fetch('/api/Tickets/history/today');
                if (!response.ok) throw new Error('Error al cargar historial');

                const tickets = await response.json();

                if (tickets.length > 0) {
                    const ultimo = tickets[0];
                    mainTurnoCode.textContent = ultimo.ticketCode;
                    mainDeskNumber.textContent = ultimo.serviceDesk?.deskNumber ?? '--';
                }

                renderHistory(tickets.slice(1));
            } catch (e) {
                console.error("Error cargando datos iniciales:", e);
            }
        }

        // Evento: Nuevo llamado
        connection.on("ReceiveNewCall", (ticket) => {
            console.log("📢 TV: Nuevo llamado", ticket);

            // Mover el actual al historial
            const prevCode = mainTurnoCode.textContent;
            if (prevCode !== '--') {
                const prevItem = document.createElement('div');
                prevItem.className = 'bg-white bg-opacity-20 backdrop-blur-sm rounded-xl p-4 text-center fade-in';
                prevItem.innerHTML = `
                    <div class="text-4xl font-bold">${prevCode}</div>
                    <div class="text-lg">${mainDeskNumber.textContent}</div>
                `;
                historyList.insertBefore(prevItem, historyList.firstChild);

                // Limitar a 5 items
                while (historyList.children.length > 5) {
                    historyList.removeChild(historyList.lastChild);
                }
            }

            // Actualizar turno actual
            mainTurnoCode.textContent = ticket.ticketCode;
            mainDeskNumber.textContent = ticket.serviceDesk?.deskNumber ?? '--';

            // Animación
            activeCallCard.classList.remove('calling-effect');
            setTimeout(() => activeCallCard.classList.add('calling-effect'), 10);
        });

        // Iniciar
        async function start() {
            try {
                await connection.start();
                console.log("✅ Conectado a SignalR (TV)");
                await loadInitialData();
            } catch (err) {
                console.error("❌ Error de conexión:", err);
                setTimeout(start, 5000);
            }
        }

        connection.onreconnected(() => {
            console.log("🔄 Reconectado");
            loadInitialData();
        });

        start();
    });
</script>
</body>
</html>